{"version":3,"sources":["actions/actions.js","components/checkBoxApp/checkboxApp.jsx","layout/components/sidebar/sidebar.jsx","layout/components/headerLayout/headerLayout.jsx","components/inputApp/inputApp.jsx","components/tableApp/tableApp.jsx","layout/components/contentLayout/contentLayout.jsx","layout/mainLayout.jsx","App.js","index.js","reducers/tableReducer.js","store.js"],"names":["actionTypes","connect","state","filters","tableReducer","props","useState","checked","setChecked","dispatch","useDispatch","useEffect","length","onChange","e","filter","addFilter","target","nameFilter","getState","newFilters","element","type","payload","filteredDocuments","allDocuments","doc","includes","status","label","Sider","Layout","SubMenu","Menu","MenuItem","Item","Sidebar","className","collapsed","defaultSelectedKeys","mode","icon","id","title","Header","BreadcrumbItem","Breadcrumb","HeaderLayout","style","padding","InputApp","nameDoc","setNameDoc","value","PlusOutlined","onClick","key","document","channel","documentName","group","dateModified","adress","addDocument","disabled","sortedInfo","setSortedInfor","fetch","then","response","json","data","documents","columns","dataIndex","sorter","a","b","sortOrder","columnKey","order","ellipsis","width","render","text","dataSource","DownOutlined","pagination","pageSize","console","log","Content","ContentLayout","Footer","MainLayout","minHeight","React","Component","App","messages","initialState","middlewares","ResuxThunk","reducer","combineReducers","action","createStore","applyMiddleware","local","navigator","language","English","Spanish","ReactDOM","store","locale","getElementById"],"mappings":"07CAAaA,EACK,eADLA,EAEI,cAFJA,EAGS,mBAHTA,EAIA,UAJAA,EAKM,gB,OC+BJC,eANS,SAACC,GACrB,MAAO,CACHC,QAASD,EAAME,aAAaD,WAIrBF,EA9BK,SAACI,GAEjB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,cAGjBC,qBAAU,WACsB,GAAxBN,EAAMF,QAAQS,QACdJ,GAAW,KAEhB,CAACH,EAAMF,UAOV,OACI,cAAC,IAAD,CAAUI,QAASA,EAASM,SANf,SAACC,GDkCS,IAACC,EAAQC,ECjChCR,EAAWM,EAAEG,OAAOV,SACpBE,GDgCwBM,EChCCV,EAAMa,WDgCCF,EChCWF,EAAEG,OAAOV,QDgCN,SAACE,EAAUU,GAE7D,IACIC,EADEjB,EAAUgB,IAAWf,aAAaD,QAGpCiB,EADAJ,EACU,sBAAOb,GAAP,CAAgBY,IAEbZ,EAAQY,QAAO,SAAAM,GAAO,OAAIA,GAAWN,KAGtDN,EAAS,CACLa,KAAMtB,EACNuB,QAAS,CAAEpB,QAASiB,KAIxB,IACII,EADEC,EAAeN,IAAWf,aAAaqB,aAGzCD,EADqB,GAArBJ,EAAWR,OACM,YAAOa,GAEJA,EAAaV,QAAO,SAAAW,GAAG,OAAIN,EAAWO,SAASD,EAAIE,WAG3EnB,EAAS,CACLa,KAAMtB,EACNuB,QAAS,CAAEC,2BCtDX,SACKnB,EAAMwB,W,SCnBXC,EAAUC,IAAVD,MACAE,EAA4BC,IAA5BD,QAAeE,EAAaD,IAAnBE,KA8CFC,EA5CC,SAAC/B,GAEb,OACI,eAACyB,EAAD,CAAOO,UAAU,QAAQC,WAAW,EAApC,UACI,qBAAKD,UAAU,mBAAf,qBACA,eAAC,IAAD,CAAME,oBAAqB,CAAC,KAAMC,KAAK,SAAvC,UACI,cAACN,EAAD,CAAkBO,KAAM,KAAxB,SACI,cAAC,IAAD,CAAkBC,GAAG,YADX,KAGd,cAACR,EAAD,CAAkBO,KAAM,KAAxB,SACI,cAAC,IAAD,CAAkBC,GAAG,UADX,KAGd,eAACV,EAAD,CAAoBS,KAAM,KAAME,MAAM,SAAtC,UACI,cAACT,EAAD,UACI,cAAC,EAAD,CAAahB,WAAW,WAAWW,MAAO,cAAC,IAAD,CAAkBa,GAAG,gBADrD,KAGd,cAACR,EAAD,UACI,cAAC,EAAD,CAAahB,WAAW,UAAUW,MAAO,cAAC,IAAD,CAAkBa,GAAG,eADpD,KAGd,cAACR,EAAD,UACI,cAAC,EAAD,CAAahB,WAAW,SAASW,MAAO,cAAC,IAAD,CAAkBa,GAAG,cADnD,KAGd,cAACR,EAAD,UACI,cAAC,EAAD,CAAahB,WAAW,SAASW,MAAO,cAAC,IAAD,CAAkBa,GAAG,cADnD,KAGd,cAACR,EAAD,UACI,cAAC,EAAD,CAAahB,WAAW,YAAYW,MAAO,cAAC,IAAD,CAAkBa,GAAG,iBADtD,OAbL,QAkBb,cAACR,EAAD,CAAkBO,KAAM,KAAxB,SACI,cAAC,IAAD,CAAkBC,GAAG,UADX,KAGd,cAACR,EAAD,CAAkBO,KAAM,KAAxB,SACI,cAAC,IAAD,CAAkBC,GAAG,WADX,KAGd,cAACR,EAAD,CAAmBO,KAAM,KAAzB,SACI,cAAC,IAAD,CAAkBC,GAAG,eADX,a,SCxCtBE,G,OAAWb,IAAXa,QACMC,EAAmBC,IAAzBX,KAkBOY,EAhBM,SAAC1C,GAElB,OACI,eAACuC,EAAD,CAAQP,UAAU,yBAAyBW,MAAO,CAAEC,QAAS,GAA7D,UACI,eAAC,IAAD,CAAYZ,UAAU,mBAAtB,UACI,cAACQ,EAAD,mBACA,cAACA,EAAD,2BAEJ,qBAAKR,UAAU,2BAAf,SACI,cAAC,IAAD,CAAkBK,GAAG,0B,0CCkBtBQ,EA3BE,SAAC7C,GAEd,MAA8BC,mBAAS,IAAvC,mBAAO6C,EAAP,KAAgBC,EAAhB,KACM3C,EAAWC,cAUjB,OACI,qCACI,sBAAM2B,UAAU,eAAhB,SACI,cAAC,IAAD,CAAkBK,GAAG,cAEzB,cAAC,IAAD,CAAOL,UAAU,iBAAiBgB,MAAOF,EAAStC,SAbpC,SAACwC,GACnBD,EAAWC,EAAMpC,OAAOoC,UAapB,cAAC,IAAD,CAAQhB,UAAU,qBAAqBf,KAAK,UAAUmB,KAAM,cAACa,EAAA,EAAD,IACxDC,QAXO,WACf9C,EJHmB,SAAC0C,GAAD,OAAa,SAAC1C,EAAUU,GAE/C,IAAMqC,EAAMrC,IAAWf,aAAaqB,aAAab,OAAS,EAc1DH,EAAS,CACLa,KAAMtB,EACNuB,QAAS,CAAEkC,SAdE,CACbf,GAAIc,EACJA,IAAK,GAAKA,EACVE,QAAS,MACTC,aAAcR,EACdS,MAAO,WACPhC,OAAQ,WACRiC,aAAc,aACdvC,KAAM,QACNwC,OAAQ,iBASZ,IAEItC,EAFErB,EAAUgB,IAAWf,aAAaD,QAClCsB,EAAeN,IAAWf,aAAaqB,aAGzCD,EADkB,GAAlBrB,EAAQS,OACS,YAAOa,GAEJA,EAAaV,QAAO,SAAAW,GAAG,OAAIvB,EAAQwB,SAASD,EAAIE,WAGxEnB,EAAS,CACLa,KAAMtB,EACNuB,QAAS,CAAEC,wBI9BFuC,CAAYZ,KAUQa,SAA4B,GAAlBb,EAAQvC,OAD3C,SAEI,cAAC,IAAD,CAAkB8B,GAAG,iB,0BC8HtBzC,eAPS,SAACC,GACrB,MAAO,CACHuB,aAAcvB,EAAME,aAAaqB,aACjCD,kBAAmBtB,EAAME,aAAaoB,qBAI/BvB,EAlJE,SAACI,GAEd,MAAqCC,mBAAS,IAA9C,mBAAO2D,EAAP,KAAmBC,EAAnB,KACMzD,EAAWC,cAKjBC,qBAAU,WAENwD,MAAM,mCACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACzBF,MAAK,SAAAG,GLbM,IAACC,EKcV/D,GLdU+D,EKcSD,ELdK,SAAC9D,EAAUU,GAC/CV,EAAS,CACLa,KAAMtB,EACNuB,QAAS,CAAEiD,uBKaZ,IAGH,IAiCMC,EAAU,CACZ,CACI9B,MAAO,cAAC,IAAD,CAAkBD,GAAG,YAC5BgC,UAAW,UACXlB,IAAK,UACLmB,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAElB,QAAQ9C,OAASiE,EAAEnB,QAAQ9C,QAC/CkE,UAAoC,YAAzBb,EAAWc,WAA2Bd,EAAWe,MAC5DC,UAAU,EACVC,MAAO,KAEX,CACIvC,MAAO,cAAC,IAAD,CAAkBD,GAAG,iBAC5BgC,UAAW,eACXlB,IAAK,eACLmB,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEjB,aAAekB,EAAElB,cACrCmB,UAAoC,iBAAzBb,EAAWc,WAAgCd,EAAWe,MACjEC,UAAU,EACVE,OAAQ,SAACC,GAAD,OAAU,4BAAIA,MAE1B,CACIzC,MAAO,cAAC,IAAD,CAAkBD,GAAG,UAC5BgC,UAAW,QACXlB,IAAK,QACLmB,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEhB,MAAMhD,OAASiE,EAAEjB,MAAMhD,QAC3CkE,UAAoC,UAAzBb,EAAWc,WAAyBd,EAAWe,MAC1DC,UAAU,EACVE,OAAQ,SAACC,GAAD,OAAU,4BAAIA,KACtBF,MAAO,KAEX,CACIvC,MAAO,cAAC,IAAD,CAAkBD,GAAG,WAC5BgC,UAAW,SACXlB,IAAK,SACLmB,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEhD,OAAOhB,OAASiE,EAAEjD,OAAOhB,QAC7CkE,UAAoC,WAAzBb,EAAWc,WAA0Bd,EAAWe,MAC3DC,UAAU,EACVC,MAAO,KAEX,CACIvC,MAAO,cAAC,IAAD,CAAkBD,GAAG,iBAC5BgC,UAAW,eACXlB,IAAK,eACLmB,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEf,aAAajD,OAASiE,EAAEhB,aAAajD,QACzDkE,UAAoC,iBAAzBb,EAAWc,WAAgCd,EAAWe,MACjEC,UAAU,EACVC,MAAO,KAEX,CACIvC,MAAO,cAAC,IAAD,CAAkBD,GAAG,SAC5BgC,UAAW,OACXlB,IAAK,OACLmB,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEtD,KAAKV,OAASiE,EAAEvD,KAAKV,QACzCkE,UAAoC,SAAzBb,EAAWc,WAAwBd,EAAWe,MACzDC,UAAU,EACVC,MAAO,KAEX,CACIvC,MAAO,cAAC,IAAD,CAAkBD,GAAG,WAC5BgC,UAAW,SACXlB,IAAK,SACLmB,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEd,OAAOlD,OAASiE,EAAEf,OAAOlD,QAC7CkE,UAAoC,WAAzBb,EAAWc,WAA0Bd,EAAWe,MAC3DC,UAAU,EACVE,OAAQ,SAACC,GAAD,OAAU,4BAAIA,KACtBF,MAAO,MAITG,EAAahF,EAAMmB,kBAEzB,OACI,qCACI,sBAAKa,UAAU,yBAAf,UACI,sBAAMA,UAAU,qBAAhB,SAAqC,cAAC,IAAD,CAAkBK,GAAG,gBAK1D,cAAC,IAAD,CAAQL,UAAU,oBAAoBkB,QAlF7B,WACjB9C,GLyB0B,SAACA,EAAUU,GACzCV,EAAS,CACLa,KAAMtB,QKsDE,SAA8D,cAAC,IAAD,CAAkB0C,GAAG,YACnF,eAAC,IAAD,CAAQL,UAAU,mBAAmBf,KAAK,OAA1C,UACI,cAAC,IAAD,CAAkBoB,GAAG,SAAS,cAAC4C,EAAA,EAAD,UAGtC,cAAC,IAAD,CAAOC,WAlII,CACfC,SAAU,GAiIyBf,QAASA,EAASY,WAAYA,EAAYxE,SApH5D,SAAC0E,EAAYpF,EAASwE,GACvCc,QAAQC,IAAI,qBAAsBH,EAAYpF,EAASwE,GACvDT,EAAeS,YCtBPgB,GAA2B5D,IAAnCa,OAAmCb,IAA3B4D,SAiBDC,GAjB4B7D,IAAlB8D,OAAkB9D,IAAVD,MAEX,SAACzB,GAEnB,OACI,eAACsF,EAAD,CAAStD,UAAU,gBAAnB,UACI,qBAAKA,UAAU,eAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,eAAf,SACI,cAAC,EAAD,WCUDyD,GAnB4B/D,IAAnCa,OAAmCb,IAA3B4D,QAA2B5D,IAAlB8D,OAAkB9D,IAAVD,M,4JAK7B,WACI,OACI,eAAC,IAAD,CAAQkB,MAAO,CAAE+C,UAAW,SAA5B,UACI,cAAC,EAAD,IAEA,eAAC,IAAD,CAAQ1D,UAAU,cAAlB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,c,GATK2D,IAAMC,Y,OCEhBC,ICDXC,EDCWD,EARf,WACE,OACE,qBAAK7D,UAAU,MAAf,SACE,cAAC,EAAD,O,0BELA+D,G,OAAe,CACjB3E,aAAc,GACdD,kBAAmB,GACnBrB,QAAS,KCFPkG,EAAc,CAACC,KAEfC,EAAUC,YAAgB,CAC5BpG,aDEW,WAAmC,IAAlCF,EAAiC,uDAAzBkG,EAAcK,EAAW,uCAC7C,OAAQA,EAAOnF,MACX,KAAKtB,EACD,OAAO,2BACAE,GADP,IAEIuB,aAAa,GAAD,mBAAMvB,EAAMuB,cAAZ,CAA0BgF,EAAOlF,QAAQkC,aAG7D,KAAKzD,EACD,OAAO,2BACAE,GADP,IAEIuB,aAAa,YAAKgF,EAAOlF,QAAQiD,WACjChD,kBAAkB,YAAKiF,EAAOlF,QAAQiD,aAG9C,KAAKxE,EACD,OAAO,2BACAE,GADP,IAEIsB,kBAAkB,YAAKiF,EAAOlF,QAAQC,qBAG9C,KAAKxB,EACD,OAAO,2BACAE,GADP,IAEIC,QAASsG,EAAOlF,QAAQpB,UAGhC,KAAKH,EACD,OAAO,2BACAE,GADP,IAEIsB,kBAAkB,YAAKtB,EAAMuB,cAC7BtB,QAAS,KAGjB,QAAS,OAAOD,MCjCTwG,cAAYH,EAAS,GAAII,IAAe,WAAf,EAAmBN,I,4BFCrDO,GAAQC,UAAUC,SAGtBX,EADY,UAAVS,GACSG,GAEAC,EAGbC,IAAS9B,OAEP,cAAC,IAAD,CAAU+B,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAcC,OAAQP,GAAOT,SAAUA,EAAvC,SACE,cAAC,EAAD,QAIJ1C,SAAS2D,eAAe,W","file":"static/js/main.82959eaf.chunk.js","sourcesContent":["export const actionTypes = {\r\n    ADD_DOCUMENT: 'ADD_DOCUMENT',\r\n    SET_DATA_DB: 'SET_DATA_DB',\r\n    FILTER_DOCUMENTS: 'FILTER_DOCUMENTS',\r\n    FILTERS: 'FILTERS',\r\n    RESET_FILTERS: 'RESET_FILTERS',\r\n}\r\n\r\nexport const setDataDB = (documents) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.SET_DATA_DB,\r\n        payload: { documents }\r\n    })\r\n}\r\n\r\nexport const addDocument = (nameDoc) => (dispatch, getState) => {\r\n    //adding document\r\n    const key = getState().tableReducer.allDocuments.length + 1;\r\n\r\n    const document = {\r\n        id: key,\r\n        key: '' + key,\r\n        channel: 'PDF',\r\n        documentName: nameDoc,\r\n        group: \"Receipts\",\r\n        status: \"Received\",\r\n        dateModified: \"2021-02-05\",\r\n        type: \"Prior\",\r\n        adress: '/localhost',\r\n    }\r\n\r\n    dispatch({\r\n        type: actionTypes.ADD_DOCUMENT,\r\n        payload: { document }\r\n    })\r\n\r\n    //adding to filteredDocuments if needed\r\n    const filters = getState().tableReducer.filters;\r\n    const allDocuments = getState().tableReducer.allDocuments;\r\n    let filteredDocuments;\r\n    if (filters.length == 0) {\r\n        filteredDocuments = [...allDocuments];\r\n    } else {\r\n        filteredDocuments = allDocuments.filter(doc => filters.includes(doc.status));\r\n    }\r\n\r\n    dispatch({\r\n        type: actionTypes.FILTER_DOCUMENTS,\r\n        payload: { filteredDocuments }\r\n    })\r\n}\r\n\r\nexport const filterDocuments = (filter, addFilter) => (dispatch, getState) => {\r\n    //setting the new filters\r\n    const filters = getState().tableReducer.filters;\r\n    let newFilters;\r\n    if (addFilter) {\r\n        newFilters = [...filters, filter];\r\n    } else {\r\n        newFilters = filters.filter(element => element != filter);\r\n    }\r\n\r\n    dispatch({\r\n        type: actionTypes.FILTERS,\r\n        payload: { filters: newFilters }\r\n    })\r\n\r\n    //filtering the documents\r\n    const allDocuments = getState().tableReducer.allDocuments;\r\n    let filteredDocuments;\r\n    if (newFilters.length == 0) {\r\n        filteredDocuments = [...allDocuments];\r\n    } else {\r\n        filteredDocuments = allDocuments.filter(doc => newFilters.includes(doc.status));\r\n    }\r\n\r\n    dispatch({\r\n        type: actionTypes.FILTER_DOCUMENTS,\r\n        payload: { filteredDocuments }\r\n    })\r\n}\r\n\r\nexport const resetFilters = () => (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.RESET_FILTERS,\r\n    })\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Checkbox } from 'antd';\r\nimport { filterDocuments } from '../../actions/actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst CheckboxApp = (props) => {\r\n\r\n    const [checked, setChecked] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    //in case we clicked the reset button\r\n    useEffect(() => {\r\n        if (props.filters.length == 0) {\r\n            setChecked(false);\r\n        }\r\n    }, [props.filters])\r\n\r\n    const onChange = (e) => {\r\n        setChecked(e.target.checked);\r\n        dispatch(filterDocuments(props.nameFilter, e.target.checked));\r\n    }\r\n\r\n    return (\r\n        <Checkbox checked={checked} onChange={onChange}>\r\n            {props.label}\r\n        </Checkbox>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        filters: state.tableReducer.filters,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(CheckboxApp);","import React from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport './sidebar.css';\r\nimport CheckboxApp from '../../../components/checkBoxApp/checkboxApp';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu, Item: MenuItem } = Menu;\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    return (\r\n        <Sider className='sider' collapsed={false}>\r\n            <div className=\"div-filters-text\" >Filters</div>\r\n            <Menu defaultSelectedKeys={['1']} mode=\"inline\">\r\n                <MenuItem key=\"1\" icon={null}>\r\n                    <FormattedMessage id=\"adress\" />\r\n                </MenuItem>\r\n                <MenuItem key=\"2\" icon={null}>\r\n                    <FormattedMessage id=\"date\" />\r\n                </MenuItem>\r\n                <SubMenu key=\"sub1\" icon={null} title=\"Status\">\r\n                    <MenuItem key=\"3\">\r\n                        <CheckboxApp nameFilter=\"Received\" label={<FormattedMessage id=\"received\" />} />\r\n                    </MenuItem>\r\n                    <MenuItem key=\"4\">\r\n                        <CheckboxApp nameFilter=\"Printed\" label={<FormattedMessage id=\"printed\" />} />\r\n                    </MenuItem>\r\n                    <MenuItem key=\"5\">\r\n                        <CheckboxApp nameFilter=\"Folded\" label={<FormattedMessage id=\"folded\" />} />\r\n                    </MenuItem>\r\n                    <MenuItem key=\"6\">\r\n                        <CheckboxApp nameFilter=\"Sorted\" label={<FormattedMessage id=\"sorted\" />} />\r\n                    </MenuItem>\r\n                    <MenuItem key=\"7\">\r\n                        <CheckboxApp nameFilter=\"Delivered\" label={<FormattedMessage id=\"delivered\" />} />\r\n                    </MenuItem>\r\n\r\n                </SubMenu>\r\n                <MenuItem key=\"8\" icon={null}>\r\n                    <FormattedMessage id=\"team\" />\r\n                </MenuItem>\r\n                <MenuItem key=\"9\" icon={null}>\r\n                    <FormattedMessage id=\"group\" />\r\n                </MenuItem>\r\n                <MenuItem key=\"10\" icon={null}>\r\n                    <FormattedMessage id=\"dateRange\" />\r\n                </MenuItem>\r\n            </Menu>\r\n        </Sider>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport { Layout, Breadcrumb } from 'antd';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport './headerLayout.css';\r\n\r\nconst { Header } = Layout;\r\nconst { Item: BreadcrumbItem } = Breadcrumb;\r\n\r\nconst HeaderLayout = (props) => {\r\n\r\n    return (\r\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n            <Breadcrumb className=\"breadcrumb-style\" >\r\n                <BreadcrumbItem>Home</BreadcrumbItem>\r\n                <BreadcrumbItem>Documents</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"div-documentBrowser-text\">\r\n                <FormattedMessage id=\"documentBrowser\" />\r\n            </div>\r\n        </Header>\r\n\r\n    )\r\n}\r\n\r\nexport default HeaderLayout;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './inputApp.css';\r\nimport { Input, Button, Alert } from 'antd';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { addDocument } from '../../actions/actions';\r\n\r\nconst InputApp = (props) => {\r\n\r\n    const [nameDoc, setNameDoc] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeValue = (value) => {\r\n        setNameDoc(value.target.value);\r\n    }\r\n\r\n    const onClickAdd = () => {\r\n        dispatch(addDocument(nameDoc));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <span className=\"span-docName\">\r\n                <FormattedMessage id=\"docName\" />\r\n            </span>\r\n            <Input className=\"inputApp-style\" value={nameDoc} onChange={onChangeValue} />\r\n            <Button className=\"buttonAddNew-style\" type=\"primary\" icon={<PlusOutlined />}\r\n                onClick={onClickAdd} disabled={nameDoc.length == 0} >\r\n                <FormattedMessage id=\"addNew\" />\r\n            </Button >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputApp;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport './tableApp.css';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { Table, Dropdown, Button, Menu } from 'antd';\r\nimport { resetFilters, setDataDB } from '../../actions/actions';\r\nimport { DownOutlined } from '@ant-design/icons';\r\n\r\nconst TableApp = (props) => {\r\n\r\n    const [sortedInfo, setSortedInfor] = useState({});\r\n    const dispatch = useDispatch();\r\n    const pagination = {\r\n        pageSize: 4\r\n    }\r\n\r\n    useEffect(() => {\r\n        //get data from db.json file\r\n        fetch('http://localhost:3004/documents')\r\n            .then(response => response.json()\r\n            ).then(data => {\r\n                dispatch(setDataDB(data))\r\n            });\r\n    }, [])\r\n\r\n\r\n    const handleChange = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        setSortedInfor(sorter);\r\n        // this.setState({\r\n        //     filteredInfo: filters,\r\n        //     sortedInfo: sorter,\r\n        // });\r\n    };\r\n\r\n    const clearFilters = () => {\r\n        // this.setState({ filteredInfo: null });\r\n    };\r\n\r\n    const clearAll = () => {\r\n        // this.setState({\r\n        //     filteredInfo: null,\r\n        //     sortedInfo: null,\r\n        // });\r\n    };\r\n\r\n    const setAgeSort = () => {\r\n        // this.setState({\r\n        //     sortedInfo: {\r\n        //         order: 'descend',\r\n        //         columnKey: 'age',\r\n        //     },\r\n        // });\r\n    };\r\n\r\n    const onClickReset = () => {\r\n        dispatch(resetFilters())\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: <FormattedMessage id=\"channel\" />,\r\n            dataIndex: 'channel',\r\n            key: 'channel',\r\n            sorter: (a, b) => a.channel.length - b.channel.length,\r\n            sortOrder: sortedInfo.columnKey === 'channel' && sortedInfo.order,\r\n            ellipsis: true,\r\n            width: 100,\r\n        },\r\n        {\r\n            title: <FormattedMessage id=\"documentName\" />,\r\n            dataIndex: 'documentName',\r\n            key: 'documentName',\r\n            sorter: (a, b) => a.documentName - b.documentName,\r\n            sortOrder: sortedInfo.columnKey === 'documentName' && sortedInfo.order,\r\n            ellipsis: true,\r\n            render: (text) => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: <FormattedMessage id=\"group\" />,\r\n            dataIndex: 'group',\r\n            key: 'group',\r\n            sorter: (a, b) => a.group.length - b.group.length,\r\n            sortOrder: sortedInfo.columnKey === 'group' && sortedInfo.order,\r\n            ellipsis: true,\r\n            render: (text) => <a>{text}</a>,\r\n            width: 200,\r\n        },\r\n        {\r\n            title: <FormattedMessage id=\"status\" />,\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            sorter: (a, b) => a.status.length - b.status.length,\r\n            sortOrder: sortedInfo.columnKey === 'status' && sortedInfo.order,\r\n            ellipsis: true,\r\n            width: 200,\r\n        },\r\n        {\r\n            title: <FormattedMessage id=\"dateModified\" />,\r\n            dataIndex: 'dateModified',\r\n            key: 'dateModified',\r\n            sorter: (a, b) => a.dateModified.length - b.dateModified.length,\r\n            sortOrder: sortedInfo.columnKey === 'dateModified' && sortedInfo.order,\r\n            ellipsis: true,\r\n            width: 200,\r\n        },\r\n        {\r\n            title: <FormattedMessage id=\"type\" />,\r\n            dataIndex: 'type',\r\n            key: 'type',\r\n            sorter: (a, b) => a.type.length - b.type.length,\r\n            sortOrder: sortedInfo.columnKey === 'type' && sortedInfo.order,\r\n            ellipsis: true,\r\n            width: 200,\r\n        },\r\n        {\r\n            title: <FormattedMessage id=\"adress\" />,\r\n            dataIndex: 'adress',\r\n            key: 'adress',\r\n            sorter: (a, b) => a.adress.length - b.adress.length,\r\n            sortOrder: sortedInfo.columnKey === 'adress' && sortedInfo.order,\r\n            ellipsis: true,\r\n            render: (text) => <a>{text}</a>,\r\n            width: 200,\r\n        },\r\n    ];\r\n\r\n    const dataSource = props.filteredDocuments;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"div-title-button-table\">\r\n                <span className=\"span-dashBoardText\"><FormattedMessage id=\"dashboard\" /></span>\r\n                {/* <span className=\"span-dateText\"><FormattedMessage id=\"date\" /> <DownOutlined /></span> */}\r\n                {/* <Dropdown overlay={<Menu></Menu>} >\r\n                    Date <DownOutlined />\r\n                </Dropdown> */}\r\n                <Button className=\"buttonReset-style\" onClick={onClickReset} ><FormattedMessage id=\"reset\" /></Button>\r\n                <Button className=\"buttonDate-style\" type=\"text\">\r\n                    <FormattedMessage id=\"date\" /><DownOutlined />\r\n                </Button>\r\n            </div>\r\n            <Table pagination={pagination} columns={columns} dataSource={dataSource} onChange={handleChange} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        allDocuments: state.tableReducer.allDocuments,\r\n        filteredDocuments: state.tableReducer.filteredDocuments\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TableApp);","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport './contentLayout.css';\r\nimport InputApp from '../../../components/inputApp/inputApp';\r\nimport TableApp from '../../../components/tableApp/tableApp';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nconst ContentLayout = (props) => {\r\n\r\n    return (\r\n        <Content className=\"content-style\" >\r\n            <div className=\"div-inputApp\">\r\n                <InputApp />\r\n            </div>\r\n            <div className=\"div-tableApp\">\r\n                <TableApp />\r\n            </div>\r\n\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default ContentLayout;","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './mainLayout.css';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport Sidebar from './components/sidebar/sidebar';\r\nimport HeaderLayout from './components/headerLayout/headerLayout';\r\nimport ContentLayout from './components/contentLayout/contentLayout';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\n\r\nclass MainLayout extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                <Sidebar />\r\n\r\n                <Layout className=\"site-layout\">\r\n                    <HeaderLayout />\r\n                    <ContentLayout />\r\n                </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainLayout;","import React from 'react';\nimport { Button } from 'antd';\nimport MainLayout from './layout/mainLayout'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainLayout></MainLayout>\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n// import reportWebVitals from './reportWebVitals';\nimport { IntlProvider } from \"react-intl\";\nimport Spanish from \"./i18N/es.json\";\nimport English from \"./i18N/en.json\";\n\nconst local = navigator.language;\nlet messages;\nif (local === \"en-US\") {\n  messages = English;\n} else {\n  messages = Spanish\n}\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <IntlProvider locale={local} messages={messages} >\n      <App />\n    </IntlProvider>\n  </Provider>,\n  // </React.StrictMode>\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","import { data } from './mockedData';\r\nimport { actionTypes } from '../actions/actions';\r\n\r\nconst initialState = {\r\n    allDocuments: [],\r\n    filteredDocuments: [],\r\n    filters: [],\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_DOCUMENT: {\r\n            return {\r\n                ...state,\r\n                allDocuments: [...state.allDocuments, action.payload.document]\r\n            }\r\n        }\r\n        case actionTypes.SET_DATA_DB: {\r\n            return {\r\n                ...state,\r\n                allDocuments: [...action.payload.documents],\r\n                filteredDocuments: [...action.payload.documents],\r\n            }\r\n        }\r\n        case actionTypes.FILTER_DOCUMENTS: {\r\n            return {\r\n                ...state,\r\n                filteredDocuments: [...action.payload.filteredDocuments]\r\n            }\r\n        }\r\n        case actionTypes.FILTERS: {\r\n            return {\r\n                ...state,\r\n                filters: action.payload.filters\r\n            }\r\n        }\r\n        case actionTypes.RESET_FILTERS: {\r\n            return {\r\n                ...state,\r\n                filteredDocuments: [...state.allDocuments],\r\n                filters: []\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}","import { combineReducers, createStore, compose, applyMiddleware } from \"redux\";\r\nimport ResuxThunk from 'redux-thunk';\r\nimport tableReducer from './reducers/tableReducer';\r\n\r\nconst middlewares = [ResuxThunk];\r\n\r\nconst reducer = combineReducers({\r\n    tableReducer,\r\n})\r\n\r\nexport default createStore(reducer, {}, applyMiddleware(...middlewares));"],"sourceRoot":""}